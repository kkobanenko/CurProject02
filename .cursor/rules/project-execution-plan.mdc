# План выполнения проекта Melody→Score

## Анализ текущего состояния
Проект уже имеет базовую структуру с основными компонентами:
- ✅ Базовая структура папок
- ✅ Основные модули audio/, db/, tasks/, pages/
- ✅ Docker конфигурация
- ✅ CI/CD настройки
- ✅ Зависимости в requirements.txt

## Этапы выполнения (10 этапов)

### Этап 1: Проверка и доработка базовой инфраструктуры
- Проверить работоспособность Docker-compose
- Убедиться в корректности всех зависимостей
- Проверить подключение к БД и Redis
- Настроить логирование

### Этап 2: Доработка модулей обработки аудио
- Проверить и доработать audio/io.py (валидация файлов)
- Проверить и доработать audio/preprocess.py (нормализация, фильтры)
- Проверить и доработать audio/separation.py (разделение источников)
- Проверить и доработать audio/f0.py (извлечение частоты)

### Этап 3: Доработка модулей анализа и квантования
- Проверить и доработать audio/key_tempo.py (определение тональности и темпа)
- Проверить и доработать audio/quantize.py (квантование нот)
- Проверить и доработать audio/notation.py (генерация нотной записи)
- Проверить и доработать audio/synthesis.py (синтез аудио)

### Этап 4: Доработка базы данных и репозитория
- Проверить и доработать db/models.py (модели данных)
- Проверить и доработать db/repository.py (операции с БД)
- Создать миграции БД если необходимо
- Настроить индексы и ограничения

### Этап 5: Доработка фоновых задач
- Проверить и доработать tasks/celery_tasks.py
- Настроить очереди и планировщик
- Добавить обработку ошибок и retry логику
- Настроить очистку старых файлов

### Этап 6: Доработка UI страниц (часть 1)
- Проверить и доработать pages/01_Upload.py
- Проверить и доработать pages/02_Settings.py
- Добавить валидацию и обработку ошибок
- Улучшить UX и интерфейс

### Этап 7: Доработка UI страниц (часть 2)
- Проверить и доработать pages/03_Preview_and_Editor.py
- Проверить и доработать pages/04_Export.py
- Проверить и доработать pages/05_History.py
- Добавить интерактивные элементы и визуализацию

### Этап 8: Интеграция и тестирование
- Протестировать полный пайплайн обработки
- Проверить рендеринг PDF/PNG
- Настроить обработку ошибок на всех уровнях
- Добавить smoke-тесты

### Этап 9: Оптимизация и полировка
- Оптимизировать производительность
- Улучшить качество кода (linting, type hints)
- Добавить документацию
- Настроить мониторинг

### Этап 10: Финальная проверка и деплой
- Финальное тестирование всех компонентов
- Проверка Docker образов
- Обновление README и документации
- Подготовка к продакшену

## Правила выполнения
- Каждый этап выполняется автономно
- После каждого этапа делается коммит с описанием изменений
- При ошибках - исправление и повторный коммит
- Контекст передается между этапами
- При избыточном контексте - запрос на новый чат
description:
globs:
alwaysApply: false
---
